/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 10 07:33:25 GMT 2020
 */

package com.brmayi.yuna.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.brmayi.yuna.config.ControllerThrowableAdvice;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ControllerThrowableAdvice_ESTest extends ControllerThrowableAdvice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ControllerThrowableAdvice controllerThrowableAdvice0 = new ControllerThrowableAdvice();
      // Undeclared exception!
      try { 
        controllerThrowableAdvice0.handleThrowable((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.brmayi.yuna.config.ControllerThrowableAdvice", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ControllerThrowableAdvice controllerThrowableAdvice0 = new ControllerThrowableAdvice();
      Throwable throwable0 = mock(Throwable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(throwable0).toString();
      String string0 = controllerThrowableAdvice0.handleThrowable(throwable0);
      assertEquals("ControllerThrowableAdvice\u6D88\u606F:null", string0);
  }
}
